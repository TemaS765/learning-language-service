version: '3.8'

networks:
  app_network:
    name: ${APP_NAME}_network

x-common: &app
  build:
    context: .
    dockerfile: ./docker/php/Dockerfile
  env_file: .env
  volumes:
    - .:/var/www/app
  networks:
    - app_network

services:

  nginx:
    image: nginx:latest
    container_name: ${APP_NAME}_nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - .:/var/www/app
      - ./docker/nginx/app.conf:/etc/nginx/conf.d/app.conf
    networks:
      - app_network
    depends_on:
      - php

  php:
    <<: *app
    container_name: ${APP_NAME}_php
    ports:
      - "9000:9000"
    restart: always
    depends_on:
      migrations:
        condition: service_completed_successfully
      composer:
        condition: service_completed_successfully

  telegram_pulling_worker:
    <<: *app
    container_name: ${APP_NAME}_telegram_pulling_worker
    command: [ "sh", "-c", "php bin/console telegram:polling:start" ]
    depends_on:
      migrations:
        condition: service_completed_successfully
      composer:
        condition: service_completed_successfully

  execute_reminder_worker:
    <<: *app
    container_name: ${APP_NAME}_execute_reminder_worker
    command: [ "sh", "-c", "php bin/console app:reminder:execute" ]
    depends_on:
      migrations:
        condition: service_completed_successfully
      composer:
        condition: service_completed_successfully

  migrations:
    <<: *app
    container_name: ${APP_NAME}_migrations
    command: [ "sh", "-c", "php bin/console doctrine:migration:migrate" ]
    depends_on:
      composer:
        condition: service_completed_successfully

  composer:
    <<: *app
    container_name: ${APP_NAME}_composer
    command: [ "sh", "-c", "composer install" ]

  postgres:
    image: postgres:latest
    container_name: ${APP_NAME}_postgres
    ports:
      - "${DB_PORT}:5432"
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data:rw
    networks:
      - app_network